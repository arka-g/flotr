
<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '635939879882595',
    cookie     : true,  // enable cookies to allow the server to access
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.5' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
    });
  }
</script>



<div id="menu"> <!--  Main menu, slides out from left-->
  <span id="menu-close-btn" onclick="toggleMenu()">X</span>
  <h1>Flotr</h1>
  <% if user_signed_in? %>
    <h2><%= link_to 'Profile', profile_path %></h2>
    <h2><%= link_to 'Settings', edit_user_registration_path %></h2>
    <h2><%= link_to 'Browse Tags', browse_path %></h2>
    <h2><%= link_to 'Sign out', destroy_user_session_path, :method => :delete %></h2>
  <% else %>
    <h2><%= link_to 'Log in', new_user_session_path %></h2>
    <h2><%= link_to 'Sign up', new_user_registration_path %></h2>
    <h2><%= link_to 'Browse Tags', browse_path %></h2>
    <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
    </fb:login-button>
  <% end %>
</div>

<div id="controls"> <!-- Buttons/controls... the circular icons on the main page -->
  <div class="invisible">
    <%= will_paginate @tags %>
  </div>
  <div id="controls-tl"> <!-- top-left -->
    <div>
      <span class="flotr-bars circle-icon" onclick="toggleMenu()"></span>
      <span class="tooltip" id="tooltip-menu">MENU</span>
    </div>
    <div id="pic-info">
      <h3 id="info-title"></h3>
      <p id="info-tag"></p>
    </div>
  </div>

  <!-- <span id="up-btn" class="flotr-chevron-up circle-icon chev-up"></span> -->

  <div id="controls-tr"> <!-- top-right -->
    <div>
      <a href="<%=  new_image_path %>">
        <span class="flotr-cloud-upload circle-icon"></span>
        <span class="tooltip" id="tooltip-upload">UPLOAD</span>
      </a>
    </div>
<!--     <span class="flotr-bell-o circle-icon">
      <span class="tooltip" id="tooltip-alerts">ALERTS</span>
    </span> -->
    <div>
      <span class="flotr-info circle-icon" onclick="info()"></span>
      <span class="tooltip" id="tooltip-info">INFO</span>
    </div>
  </div>

  <span id="right-btn" class="flotr-chevron-right circle-icon chev-right" onclick="nextPage()"></span>

  <div id="controls-br"> <!-- bottom-right -->
    <div class="bottom-button">
      <span class="tooltip" id="tooltip-like">LIKE</span>
      <span id="like-btn" class="flotr-heart-o circle-icon" onclick="toggleLike()"></span>
    </div>
    <div class="bottom-button">
      <a href="" id="comment-btn">
        <span class="tooltip" id="tooltip-comment">COMMENT</span>
        <span class="flotr-comment-o circle-icon"></span>
      </a>
    </div>
    <div class="bottom-button">
      <a href="" id="buy-btn">
        <span class="tooltip" id="tooltip-buy">BUY</span>
        <span class="flotr-dollar circle-icon"></span>
      </a>
    </div>
  </div>

  <div id="more" class="bottom-button">
    <a href="" id="more-btn">
      <span class="tooltip" id="tooltip-more">MORE<br>OF THE<br>SAME</span>
      <span id="down-btn" class="flotr-chevron-down circle-icon chev-down"></span>
    </a>
  </div>

  <div id="controls-bl" class="bottom-button"> <!-- bottom-left -->
    <a href="<%= search_path %>" id="search-btn"><span class="tooltip" id="tooltip-search">SEARCH</span>
    <span class="flotr-search circle-icon"></span></a>
  </div>

  <span id="left-btn" class="flotr-chevron-left circle-icon chev-left" onclick="prevPage()"></span>
</div>

<div id="welcome" class="invisible"> <!-- Welcome/Info screen, set to "invisible" by default -->
  <h1 class="main-title">Welcome to Flotr!</h1>
  <h2 class="main-subtitle">Your ultimate source of inspiration.</h2>
  <h3 class="main-text">Navigate with your keyboard:</h3>
  <%=image_tag("keyboard.png", id: "keyboard")%>
  <div id="welcome-info">
    <h3 class="main-text group">Click anywhere to close this.</h3>
    <h3 class="main-text group">Click  <span class="flotr-info"></span>  to see this again.</h3>
  </div>
</div>

<div id="bg"> <!-- background/big picture -->
  <!--  link_to tag.images.first do  -->
  <% @tags.each do |tag| %>
    <%= image_tag( tag.images.first.image.url, :class => "bg-img" ) %>
    <%= link_to 'More like this', tag_path(tag: tag.name, page: 1), :class => "invisible", :id => "more-rb" %>
    <%= link_to 'Direct link', tag.images.first, :class => "invisible", :id => "link-rb" %>
    <%= content_tag("p", tag.name, :class => "invisible", :id => "tag-rb") %>
    <%= content_tag("p", tag.images.first.title, :class => "invisible", :id => "title-rb") %>
  <% end %>
</div>

<!-- I know this isn't the best practice, and it needs a few fixes, but it works for now... -->
<!-- This JS handles most of the keypresses on the main page, and links the buttons to their functions -->
<script type="text/javascript">
  // bootleg way of getting access to attributes of the images outside of that ruby loop
  // basically, when ruby paginates the images, I store relevant data in hidden elements on the page.
  // then, when I need it I just make a jQuery call to grab it.
  // currently doing this for the title, tag, buy, and comment links.
  $(document).ready(function() {
    $("#more-btn").attr('href', $("#more-rb").attr('href'));
    $("#comment-btn").attr('href', $("#link-rb").attr('href') + "#comment");
    $("#buy-btn").attr('href', $("#link-rb").attr('href') + "#buy");
    $("#info-title").text("Title: " + $("#title-rb").text());
    $("#info-tag").text("Tag: " + $("#tag-rb").text());
    // session storage came to the rescue for showing that "welcome" thing on first visit
    if (!sessionStorage.seenInfo) {
      info();
      sessionStorage.seenInfo = "true";
    }
  });
  // bunch 'o toggle functions for menu, like button, etc
  var toggleMenu = function () {
    $('#menu').toggleClass("activated");
  };
  var toggleLike = function () {
    if ($("#like-btn").hasClass("flotr-heart-o")) {
        $('#like-btn').removeClass("flotr-heart-o");
        $('#like-btn').addClass("flotr-heart");
    } else {
        $('#like-btn').removeClass("flotr-heart");
        $('#like-btn').addClass("flotr-heart-o");
    }
  };
  // this guy toggles the welcome screen
  var info = function() {
    if ($('#bg').hasClass('blur')) {
      hideInfo();
    } else {
      showInfo();
    }
    $('#welcome').toggleClass('invisible');
  };
  var hideInfo = function() {
    $('#bg').removeClass('blur');
    $('.circle-icon').css('opacity','0.2');
    $('#pic-info').css('opacity','0.2');
    $('.tooltip').css('opacity','0');
  };
  var showInfo = function() {
    $('#bg').addClass('blur');
    $('.circle-icon').css('opacity','1');
    $('#pic-info').css('opacity','1');
    $('.tooltip').css('opacity','1');
  }
  // close the welcome screen on any click
  $('#welcome').click(function() {
    info();
  });
  // FIX-ME: this is causing errors when logging in and on
  // other pages. Maybe need to move this to arrow_nav or something?
  // it's getting called on Browse Tags page and Log-in/Sign-up sometimes
  // and causing routing errors
  $(document).bind('keyup', function(e) {
    var cyclePage = ((window.location.href.indexOf("/images?page") >= 0) || (window.location.href.indexOf("/tags/") >= 0));
      if((e.which==73) && cyclePage) {
        info();
      } else if ((e.which==76) && cyclePage) {
        toggleLike();
      } else if ((e.which==67) && cyclePage) {
        location.href = $("#comment-btn").attr('href');
      }
  });
</script>
<%= javascript_include_tag "arrow_nav" %>
<%= javascript_tag do %>
  setPageLimit(<%= @tags.total_pages %>, "<%= request.path %>");
<% end %>
